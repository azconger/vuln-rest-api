basePath: /api/v1
definitions:
  handlers.LoginRequest:
    description: Login request payload
    properties:
      password:
        description: |-
          Password for login
          required: true
        example: admin123
        type: string
      username:
        description: |-
          Username for login
          required: true
        example: admin
        type: string
    type: object
  handlers.TokenResponse:
    description: Token response payload
    properties:
      access_token:
        description: |-
          JWT access token
          required: true
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      expires_in:
        description: |-
          Token expiration in seconds
          required: true
        example: 86400
        type: integer
      refresh_token:
        description: |-
          JWT refresh token
          required: true
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      token_type:
        description: |-
          Token type
          required: true
        example: Bearer
        type: string
    type: object
  handlers.User:
    description: User information
    properties:
      email:
        description: |-
          Email address
          required: true
        example: admin@example.com
        type: string
      id:
        description: |-
          User ID
          required: true
        example: 1
        type: integer
      role:
        description: |-
          User role
          required: true
        example: admin
        type: string
      username:
        description: |-
          Username
          required: true
        example: admin
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: A deliberately vulnerable REST API for testing and demonstration purposes.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Vulnerable REST API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login with username and password to get JWT token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.TokenResponse'
        "400":
          description: Invalid request
          schema:
            type: string
        "401":
          description: Invalid credentials
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Login to get JWT token
      tags:
      - auth
  /auth/logout:
    post:
      description: Logout and invalidate token
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Logout
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh JWT token using refresh token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.TokenResponse'
        "400":
          description: Invalid request
          schema:
            type: string
        "401":
          description: Invalid credentials
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Refresh JWT token
      tags:
      - auth
  /auth/token:
    post:
      consumes:
      - application/json
      description: Get OAuth token using Resource Owner Password Credentials flow
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.TokenResponse'
        "400":
          description: Invalid request
          schema:
            type: string
        "401":
          description: Invalid credentials
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get OAuth token
      tags:
      - auth
  /users:
    get:
      consumes:
      - application/json
      description: Get list of users with optional filtering
      parameters:
      - description: SQL WHERE clause for filtering
        in: query
        name: query
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.User'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get users
      tags:
      - users
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
